<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:MedicalIndices3">


    <ImageSource x:Key="imgSource">Images\Main.jpeg</ImageSource>
    <ImageBrush x:Key="backgroundImage" ImageSource="{DynamicResource imgSource}"></ImageBrush>

    <Style x:Key="{x:Type ToolTip}" TargetType="ToolTip">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="HorizontalOffset" Value="0" />
        <Setter Property="VerticalOffset" Value="0" />

        <Setter Property="Background" Value="GhostWhite" />
        <Setter Property="Foreground" Value="#FF7A7171" />
        <!--<Setter Property="FontWeight" Value="Bold"/>-->
        <Setter Property="FontSize" Value="11" />
        <Setter Property="FontFamily" Value="Microsoft YaHei" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Canvas Width="160" Height="110">
                        <Path x:Name="Container"
                     
                      Margin="0"
                      Data="M 50,10 L60,0 L70,10 L100,10 L100,100 L0,100 L0,10 L50,10" Width="150" Height="100"
                      Fill="#FFBCDFFF"
                      Stroke="#FF3E454B">
                            <Path.Effect>
                                <DropShadowEffect BlurRadius="10"
                                          Opacity="0.5"
                                          ShadowDepth="2" />
                            </Path.Effect>
                        </Path>
                        <TextBlock
                           Text="{TemplateBinding Content}" Canvas.Top="7"
                           TextWrapping="Wrapwithoverflow" />
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>





    <Style x:Key="BorderStyle" TargetType="{x:Type Border}">
        <Setter Property="CornerRadius" Value="5,5,5,5"/>
        <Setter Property="Background" Value="#FFBCDFFF"/>
        <!--<Setter Property="Background" Value="#2e3137"/>-->
    </Style>




    <Style x:Key="btn" TargetType="Button">
        <Setter Property="FontFamily" Value="Helvetica Neue,Helvetica,Arial,sans-serif"/>
        <Setter Property="FontSize" Value="21"/>
        <Setter Property="Padding" Value="12,8"/>
        <Setter Property="Width" Value="160"/>
        <Setter Property="FontWeight" Value="Bold"/>


        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border Name="border" CornerRadius="7" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <Grid>
                            <Border Name="dropShadowBorder" CornerRadius="4" BorderBrush="Transparent" BorderThickness="0" Visibility="Hidden">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,0.16">
                                        <GradientStop Color="#22000000" Offset="0"/>
                                        <GradientStop Color="#00000000" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                            <ContentPresenter Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--default button highlight-->
                        <Trigger Property="Button.IsDefaulted" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <!--inner drop shadow when pressed / checked-->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Visibility" TargetName="dropShadowBorder" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Setter Property="Visibility" TargetName="dropShadowBorder" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="border" Value="0.60"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="btn-primary" TargetType="Button" BasedOn="{StaticResource btn}">

        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="White"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="#428bca"/>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <SolidColorBrush Color="#357ebd"/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#3071a9"/>
                <Setter Property="BorderBrush" Value="#285e8e"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#3071a9"/>
                <Setter Property="BorderBrush" Value="#285e8e"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="Background" Value="#3071a9"/>
                <Setter Property="BorderBrush" Value="#285e8e"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="textboxPasswordboxStyles" TargetType="Control">
        <Setter Property="FontSize" Value="21"/>
        <Setter Property="FontFamily" Value="Microsoft YaHei"/>
        <Setter Property="FontWeight" Value="Light"/>
        <Setter Property="Background" Value="#FFBCDFFF"/>

        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate>
                    <Border CornerRadius="6" BorderThickness="{TemplateBinding BorderThickness}" Height="{TemplateBinding  Height}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Width="{TemplateBinding Width}" >
                        <ScrollViewer Name="PART_ContentHost" />
                    </Border>
                    <ControlTemplate.Triggers>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type TextBox}"
    BasedOn="{StaticResource textboxPasswordboxStyles}">
    </Style>
    <Style TargetType="{x:Type PasswordBox}"
    BasedOn="{StaticResource textboxPasswordboxStyles}">
    </Style>

    <Style x:Key="resTextBox"  TargetType="TextBox">
        <!--<EventSetter  Event="TextChanged"  Handler="TxtAuto_TextChanged"/>-->
        <Setter Property="FontSize" Value="21"/>
        <Setter Property="Width" Value="200"/>
        <Setter Property="Background" Value="#FFBCDFFF"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="FlowDirection" Value="LeftToRight"/>
        <Setter Property="FontFamily" Value="Microsoft YaHei"/>
        <Setter Property="FontWeight" Value="Light"/>
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>

        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate>
                    <Border Name="bg" CornerRadius="3" BorderThickness="{TemplateBinding BorderThickness}" Height="{TemplateBinding  Height}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Width="{TemplateBinding Width}" >
                        <ScrollViewer Name="PART_ContentHost"  />
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="Validation.HasError" Value="True">
                        <Trigger.Setters>
                         
                            <Setter Property="BorderThickness" TargetName="bg" Value="2"/>
                            <Setter Property="BorderBrush" TargetName="bg"  Value="Gray"/>
                        </Trigger.Setters>
                    </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>

        </Setter>

    </Style>

    <Style x:Key="resTextLabel"  TargetType="Label">
        <Setter Property="FontSize" Value="21"/>
        <Setter Property="Foreground" Value="#FF7A7171"/>
        <Setter Property="FontFamily" Value="Microsoft YaHei"/>
        <Setter Property="Margin" Value="15,0,0,0"/>

        <Setter Property="FlowDirection" Value="LeftToRight"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
    </Style>



</ResourceDictionary>